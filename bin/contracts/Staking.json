{
    "contractName": "Staking",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "initialSupply",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "staker",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "stake",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "staker",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "unstake",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "CollectAllRewards",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                }
            ],
            "name": "CollectRewards",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "Stake",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "Unstake",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "WithdrawFunds",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CollectAllRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"CollectRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/contracts/Staking.sol\":{\"keccak256\":\"0x38c2bb240e0488c5928fa32ec8aa66abf5c6affedeb5c678191f55faae1eb3ec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3c306d483c354889e4668a64b090658441457e526a81445b96979cc2613ab108\",\"dweb:/ipfs/QmQPLP7WFey4Xw8bmu1k1GaocvKHTyWcXJN6dfm1HV2cYy\"]},\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xfb35c81a7ce8cca3f78520b10dfe8d03d295ff24e4ada7c2a3cb3bc67ca86da3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3e64032b37859b118269aa4fe7994820d82f29233ed3d627c24d80563cc24e45\",\"dweb:/ipfs/QmUY7CD8hm6kR2DNvMFbgz2pyaeVoiR91wmvozdqiPbLYX\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040516200106c3803806200106c83398101604081905262000034916200024a565b6040518060400160405280600981526020016821363ab2aa37b5b2b760b91b8152506040518060400160405280600381526020016210931560ea1b81525081600390805190602001906200008a929190620001a4565b508051620000a0906004906020840190620001a4565b505050620000b53082620000bc60201b60201c565b50620002c7565b6001600160a01b038216620001175760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012b919062000264565b90915550506001600160a01b038216600090815260208190526040812080548392906200015a90849062000264565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b2906200028b565b90600052602060002090601f016020900481019282620001d6576000855562000221565b82601f10620001f157805160ff191683800117855562000221565b8280016001018555821562000221579182015b828111156200022157825182559160200191906001019062000204565b506200022f92915062000233565b5090565b5b808211156200022f576000815560010162000234565b6000602082840312156200025d57600080fd5b5051919050565b600082198211156200028657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002a057607f821691505b602082108103620002c157634e487b7160e01b600052602260045260246000fd5b50919050565b610d9580620002d76000396000f3fe6080604052600436106100f75760003560e01c806370a082311161008a578063a8fca1ac11610059578063a8fca1ac146101d9578063a9059cbb14610291578063dd62ed3e146102b1578063ebedb8b3146102d157600080fd5b806370a0823114610207578063850821291461023d57806395d89b411461025c578063a457c2d71461027157600080fd5b8063313ce567116100c6578063313ce5671461019d57806339509351146101b95780634c0aac9a146101d95780636d6b2f77146101e957600080fd5b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017d57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b506101186102f1565b6040516101259190610b80565b60405180910390f35b34801561013a57600080fd5b5061014e610149366004610bcf565b610383565b6040519015158152602001610125565b34801561016a57600080fd5b506002545b604051908152602001610125565b34801561018957600080fd5b5061014e610198366004610bf9565b61039b565b3480156101a957600080fd5b5060405160128152602001610125565b3480156101c557600080fd5b5061014e6101d4366004610bcf565b6103bf565b3480156101e557600080fd5b505b005b3480156101f557600080fd5b506101e7610204366004610c35565b50565b34801561021357600080fd5b5061016f610222366004610c35565b6001600160a01b031660009081526020819052604090205490565b34801561024957600080fd5b506101e7610258366004610bcf565b5050565b34801561026857600080fd5b506101186103e1565b34801561027d57600080fd5b5061014e61028c366004610bcf565b6103f0565b34801561029d57600080fd5b5061014e6102ac366004610bcf565b610470565b3480156102bd57600080fd5b5061016f6102cc366004610c57565b61047e565b3480156102dd57600080fd5b506101e76102ec366004610bcf565b6104a9565b60606003805461030090610c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90610c8a565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b5050505050905090565b6000336103918185856106de565b5060019392505050565b6000336103a9858285610802565b6103b485858561087c565b506001949350505050565b6000336103918185856103d2838361047e565b6103dc9190610cda565b6106de565b60606004805461030090610c8a565b600033816103fe828661047e565b9050838110156104635760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103b482868684036106de565b60003361039181858561087c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b336104f65760405162461bcd60e51b815260206004820152601860248201527f5a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000604482015260640161045a565b67016345785d8a000081101561055a5760405162461bcd60e51b815260206004820152602360248201527f796f752063616e2774207374616b65206c657373207468616e20302e312065746044820152623432b960e91b606482015260840161045a565b61056682333084610a4a565b60005b336000908152600560205260409020548110156106905733600090815260056020526040902080546001600160a01b0385169190839081106105ad576105ad610cf2565b60009182526020909120600290910201546001600160a01b03160361061b573360009081526005602052604090208054839190839081106105f0576105f0610cf2565b906000526020600020906002020160010160008282546106109190610cda565b9091555061067e9050565b33600090815260056020908152604080832081518083019092526001600160a01b038781168352828401878152825460018082018555938752949095209251600290940290920180546001600160a01b0319169390921692909217815591519101555b8061068881610d08565b915050610569565b50604080513381526001600160a01b03841660208201529081018290527fbf6eac2f4b953b5538a7beedc8a7fa29bc34b3b2029a1c4d794d946c2c5014389060600160405180910390a15050565b6001600160a01b0383166107405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045a565b6001600160a01b0382166107a15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061080e848461047e565b9050600019811461087657818110156108695760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161045a565b61087684848484036106de565b50505050565b6001600160a01b0383166108e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045a565b6001600160a01b0382166109425760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045a565b6001600160a01b038316600090815260208190526040902054818110156109ba5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161045a565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109f1908490610cda565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3d91815260200190565b60405180910390a3610876565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610aae9190610d21565b6000604051808303816000865af19150503d8060008114610aeb576040519150601f19603f3d011682016040523d82523d6000602084013e610af0565b606091505b5091509150818015610b1a575080511580610b1a575080806020019051810190610b1a9190610d3d565b610b4c5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161045a565b505050505050565b60005b83811015610b6f578181015183820152602001610b57565b838111156108765750506000910152565b6020815260008251806020840152610b9f816040850160208701610b54565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610bca57600080fd5b919050565b60008060408385031215610be257600080fd5b610beb83610bb3565b946020939093013593505050565b600080600060608486031215610c0e57600080fd5b610c1784610bb3565b9250610c2560208501610bb3565b9150604084013590509250925092565b600060208284031215610c4757600080fd5b610c5082610bb3565b9392505050565b60008060408385031215610c6a57600080fd5b610c7383610bb3565b9150610c8160208401610bb3565b90509250929050565b600181811c90821680610c9e57607f821691505b602082108103610cbe57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ced57610ced610cc4565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610d1a57610d1a610cc4565b5060010190565b60008251610d33818460208701610b54565b9190910192915050565b600060208284031215610d4f57600080fd5b81518015158114610c5057600080fdfea2646970667358221220f80214f512c02845b67467cd48c4b993bdfe551a395c3b502cb9fad424bdfdf164736f6c634300080e0033",
    "deployedBytecode": "6080604052600436106100f75760003560e01c806370a082311161008a578063a8fca1ac11610059578063a8fca1ac146101d9578063a9059cbb14610291578063dd62ed3e146102b1578063ebedb8b3146102d157600080fd5b806370a0823114610207578063850821291461023d57806395d89b411461025c578063a457c2d71461027157600080fd5b8063313ce567116100c6578063313ce5671461019d57806339509351146101b95780634c0aac9a146101d95780636d6b2f77146101e957600080fd5b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017d57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b506101186102f1565b6040516101259190610b80565b60405180910390f35b34801561013a57600080fd5b5061014e610149366004610bcf565b610383565b6040519015158152602001610125565b34801561016a57600080fd5b506002545b604051908152602001610125565b34801561018957600080fd5b5061014e610198366004610bf9565b61039b565b3480156101a957600080fd5b5060405160128152602001610125565b3480156101c557600080fd5b5061014e6101d4366004610bcf565b6103bf565b3480156101e557600080fd5b505b005b3480156101f557600080fd5b506101e7610204366004610c35565b50565b34801561021357600080fd5b5061016f610222366004610c35565b6001600160a01b031660009081526020819052604090205490565b34801561024957600080fd5b506101e7610258366004610bcf565b5050565b34801561026857600080fd5b506101186103e1565b34801561027d57600080fd5b5061014e61028c366004610bcf565b6103f0565b34801561029d57600080fd5b5061014e6102ac366004610bcf565b610470565b3480156102bd57600080fd5b5061016f6102cc366004610c57565b61047e565b3480156102dd57600080fd5b506101e76102ec366004610bcf565b6104a9565b60606003805461030090610c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90610c8a565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b5050505050905090565b6000336103918185856106de565b5060019392505050565b6000336103a9858285610802565b6103b485858561087c565b506001949350505050565b6000336103918185856103d2838361047e565b6103dc9190610cda565b6106de565b60606004805461030090610c8a565b600033816103fe828661047e565b9050838110156104635760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103b482868684036106de565b60003361039181858561087c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b336104f65760405162461bcd60e51b815260206004820152601860248201527f5a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000604482015260640161045a565b67016345785d8a000081101561055a5760405162461bcd60e51b815260206004820152602360248201527f796f752063616e2774207374616b65206c657373207468616e20302e312065746044820152623432b960e91b606482015260840161045a565b61056682333084610a4a565b60005b336000908152600560205260409020548110156106905733600090815260056020526040902080546001600160a01b0385169190839081106105ad576105ad610cf2565b60009182526020909120600290910201546001600160a01b03160361061b573360009081526005602052604090208054839190839081106105f0576105f0610cf2565b906000526020600020906002020160010160008282546106109190610cda565b9091555061067e9050565b33600090815260056020908152604080832081518083019092526001600160a01b038781168352828401878152825460018082018555938752949095209251600290940290920180546001600160a01b0319169390921692909217815591519101555b8061068881610d08565b915050610569565b50604080513381526001600160a01b03841660208201529081018290527fbf6eac2f4b953b5538a7beedc8a7fa29bc34b3b2029a1c4d794d946c2c5014389060600160405180910390a15050565b6001600160a01b0383166107405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045a565b6001600160a01b0382166107a15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061080e848461047e565b9050600019811461087657818110156108695760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161045a565b61087684848484036106de565b50505050565b6001600160a01b0383166108e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045a565b6001600160a01b0382166109425760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045a565b6001600160a01b038316600090815260208190526040902054818110156109ba5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161045a565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109f1908490610cda565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3d91815260200190565b60405180910390a3610876565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610aae9190610d21565b6000604051808303816000865af19150503d8060008114610aeb576040519150601f19603f3d011682016040523d82523d6000602084013e610af0565b606091505b5091509150818015610b1a575080511580610b1a575080806020019051810190610b1a9190610d3d565b610b4c5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161045a565b505050505050565b60005b83811015610b6f578181015183820152602001610b57565b838111156108765750506000910152565b6020815260008251806020840152610b9f816040850160208701610b54565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610bca57600080fd5b919050565b60008060408385031215610be257600080fd5b610beb83610bb3565b946020939093013593505050565b600080600060608486031215610c0e57600080fd5b610c1784610bb3565b9250610c2560208501610bb3565b9150604084013590509250925092565b600060208284031215610c4757600080fd5b610c5082610bb3565b9392505050565b60008060408385031215610c6a57600080fd5b610c7383610bb3565b9150610c8160208401610bb3565b90509250929050565b600181811c90821680610c9e57607f821691505b602082108103610cbe57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ced57610ced610cc4565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610d1a57610d1a610cc4565b5060010190565b60008251610d33818460208701610b54565b9190910192915050565b600060208284031215610d4f57600080fd5b81518015158114610c5057600080fdfea2646970667358221220f80214f512c02845b67467cd48c4b993bdfe551a395c3b502cb9fad424bdfdf164736f6c634300080e0033",
    "sourceMap": "341:1629:0:-:0;;;720:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:1;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;824:35:0::1;838:4;845:13;824:5;;;:35;;:::i;:::-;720:147:::0;341:1629;;8411:389:1;-1:-1:-1;;;;;8494:21:1;;8486:65;;;;-1:-1:-1;;;8486:65:1;;405:2:6;8486:65:1;;;387:21:6;444:2;424:18;;;417:30;483:33;463:18;;;456:61;534:18;;8486:65:1;;;;;;;;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:1;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:1;;939:25:6;;;-1:-1:-1;;;;;8697:37:1;;;8714:1;;8697:37;;927:2:6;912:18;8697:37:1;;;;;;;8411:389;;:::o;341:1629:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;341:1629:0;;;-1:-1:-1;341:1629:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:6;;14:184;-1:-1:-1;14:184:6:o;563:225::-;603:3;634:1;630:6;627:1;624:13;621:136;;;679:10;674:3;670:20;667:1;660:31;714:4;711:1;704:15;742:4;739:1;732:15;621:136;-1:-1:-1;773:9:6;;563:225::o;975:380::-;1054:1;1050:12;;;;1097;;;1118:61;;1172:4;1164:6;1160:17;1150:27;;1118:61;1225:2;1217:6;1214:14;1194:18;1191:38;1188:161;;1271:10;1266:3;1262:20;1259:1;1252:31;1306:4;1303:1;1296:15;1334:4;1331:1;1324:15;1188:161;;975:380;;;:::o;:::-;341:1629:0;;;;;;",
    "deployedSourceMap": "341:1629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:1;;;;;:::i;:::-;;:::i;:::-;;;1267:14:6;;1260:22;1242:41;;1230:2;1215:18;4433:197:1;1102:187:6;3244:106:1;;;;;;;;;;-1:-1:-1;3331:12:1;;3244:106;;;1440:25:6;;;1428:2;1413:18;3244:106:1;1294:177:6;5192:286:1;;;;;;;;;;-1:-1:-1;5192:286:1;;;;;:::i;:::-;;:::i;3093:91::-;;;;;;;;;;-1:-1:-1;3093:91:1;;3175:2;1951:36:6;;1939:2;1924:18;3093:91:1;1809:184:6;5873:234:1;;;;;;;;;;-1:-1:-1;5873:234:1;;;;;:::i;:::-;;:::i;1864:44:0:-;;;;;;;;;;;;;1739:59;;;;;;;;;;-1:-1:-1;1739:59:0;;;;;:::i;:::-;;;3408:125:1;;;;;;;;;;-1:-1:-1;3408:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;1661:70:0;;;;;;;;;;-1:-1:-1;1661:70:0;;;;;:::i;:::-;;;;2367:102:1;;;;;;;;;;;;;:::i;6594:427::-;;;;;;;;;;-1:-1:-1;6594:427:1;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:1;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;;;;;-1:-1:-1;3976:149:1;;;;;:::i;:::-;;:::i;879:774:0:-;;;;;;;;;;-1:-1:-1;879:774:0;;;;;:::i;:::-;;:::i;2156:98:1:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;3306:2:6;6803:85:1;;;3288:21:6;3345:2;3325:18;;;3318:30;3384:34;3364:18;;;3357:62;-1:-1:-1;;;3435:18:6;;;3428:35;3480:19;;6803:85:1;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;879:774:0:-;955:10;947:61;;;;-1:-1:-1;;;947:61:0;;3712:2:6;947:61:0;;;3694:21:6;3751:2;3731:18;;;3724:30;3790:26;3770:18;;;3763:54;3834:18;;947:61:0;3510:348:6;947:61:0;1038:9;1027:7;:20;;1019:68;;;;-1:-1:-1;;;1019:68:0;;4065:2:6;1019:68:0;;;4047:21:6;4104:2;4084:18;;;4077:30;4143:34;4123:18;;;4116:62;-1:-1:-1;;;4194:18:6;;;4187:33;4237:19;;1019:68:0;3863:399:6;1019:68:0;1146:75;1178:6;1186:10;1206:4;1213:7;1146:31;:75::i;:::-;1239:9;1234:346;1270:10;1258:23;;;;:11;:23;;;;;:30;1254:34;;1234:346;;;1326:10;1314:23;;;;:11;:23;;;;;:26;;-1:-1:-1;;;;;1314:42:0;;;:23;1338:1;;1314:26;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;-1:-1:-1;;;;;1314:32:0;:42;1310:259;;1388:10;1376:23;;;;:11;:23;;;;;:26;;1416:7;;1376:23;1400:1;;1376:26;;;;;;:::i;:::-;;;;;;;;;;;:36;;;:47;;;;;;;:::i;:::-;;;;-1:-1:-1;1310:259:0;;-1:-1:-1;1310:259:0;;1489:10;1477:23;;;;:11;:23;;;;;;;;1506:46;;;;;;;;-1:-1:-1;;;;;1506:46:0;;;;;;;;;;;1477:76;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1477:76:0;;;;;;;;;;;;;;;;1310:259;1290:3;;;;:::i;:::-;;;;1234:346;;;-1:-1:-1;1597:34:0;;;1603:10;4779:34:6;;-1:-1:-1;;;;;4849:15:6;;4844:2;4829:18;;4822:43;4881:18;;;4874:34;;;1597::0;;4729:2:6;4714:18;1597:34:0;;;;;;;879:774;;:::o;10119:370:1:-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;5121:2:6;10242:68:1;;;5103:21:6;5160:2;5140:18;;;5133:30;5199:34;5179:18;;;5172:62;-1:-1:-1;;;5250:18:6;;;5243:34;5294:19;;10242:68:1;4919:400:6;10242:68:1;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;5526:2:6;10320:68:1;;;5508:21:6;5565:2;5545:18;;;5538:30;5604:34;5584:18;;;5577:62;-1:-1:-1;;;5655:18:6;;;5648:32;5697:19;;10320:68:1;5324:398:6;10320:68:1;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1440:25:6;;;10450:32:1;;1413:18:6;10450:32:1;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;5929:2:6;11019:68:1;;;5911:21:6;5968:2;5948:18;;;5941:30;6007:31;5987:18;;;5980:59;6056:18;;11019:68:1;5727:353:6;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:1;;7602:68;;;;-1:-1:-1;;;7602:68:1;;6287:2:6;7602:68:1;;;6269:21:6;6326:2;6306:18;;;6299:30;6365:34;6345:18;;;6338:62;-1:-1:-1;;;6416:18:6;;;6409:35;6461:19;;7602:68:1;6085:401:6;7602:68:1;-1:-1:-1;;;;;7688:16:1;;7680:64;;;;-1:-1:-1;;;7680:64:1;;6693:2:6;7680:64:1;;;6675:21:6;6732:2;6712:18;;;6705:30;6771:34;6751:18;;;6744:62;-1:-1:-1;;;6822:18:6;;;6815:33;6865:19;;7680:64:1;6491:399:6;7680:64:1;-1:-1:-1;;;;;7826:15:1;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:1;;7097:2:6;7851:72:1;;;7079:21:6;7136:2;7116:18;;;7109:30;7175:34;7155:18;;;7148:62;-1:-1:-1;;;7226:18:6;;;7219:36;7272:19;;7851:72:1;6895:402:6;7851:72:1;-1:-1:-1;;;;;7957:15:1;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:1;8063:4;-1:-1:-1;;;;;8054:26:1;;8073:6;8054:26;;;;1440:25:6;;1428:2;1413:18;;1294:177;8054:26:1;;;;;;;;8091:37;11795:121;627:358:5;825:69;;;-1:-1:-1;;;;;4797:15:6;;;825:69:5;;;4779:34:6;4849:15;;;4829:18;;;4822:43;4881:18;;;;4874:34;;;825:69:5;;;;;;;;;;4714:18:6;;;;825:69:5;;;;;;;-1:-1:-1;;;;;825:69:5;-1:-1:-1;;;825:69:5;;;814:81;;-1:-1:-1;;;;814:10:5;;;;:81;;825:69;814:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:129;;;;913:7;:57;;;;-1:-1:-1;925:11:5;;:16;;:44;;;956:4;945:24;;;;;;;;;;;;:::i;:::-;905:73;;;;-1:-1:-1;;;905:73:5;;8065:2:6;905:73:5;;;8047:21:6;8104:1;8084:18;;;8077:29;-1:-1:-1;;;8122:18:6;;;8115:33;8165:18;;905:73:5;7863:326:6;905:73:5;756:229;;627:358;;;;:::o;14:258:6:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:6;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:6;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:6:o;665:173::-;733:20;;-1:-1:-1;;;;;782:31:6;;772:42;;762:70;;828:1;825;818:12;762:70;665:173;;;:::o;843:254::-;911:6;919;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1011:29;1030:9;1011:29;:::i;:::-;1001:39;1087:2;1072:18;;;;1059:32;;-1:-1:-1;;;843:254:6:o;1476:328::-;1553:6;1561;1569;1622:2;1610:9;1601:7;1597:23;1593:32;1590:52;;;1638:1;1635;1628:12;1590:52;1661:29;1680:9;1661:29;:::i;:::-;1651:39;;1709:38;1743:2;1732:9;1728:18;1709:38;:::i;:::-;1699:48;;1794:2;1783:9;1779:18;1766:32;1756:42;;1476:328;;;;;:::o;1998:186::-;2057:6;2110:2;2098:9;2089:7;2085:23;2081:32;2078:52;;;2126:1;2123;2116:12;2078:52;2149:29;2168:9;2149:29;:::i;:::-;2139:39;1998:186;-1:-1:-1;;;1998:186:6:o;2189:260::-;2257:6;2265;2318:2;2306:9;2297:7;2293:23;2289:32;2286:52;;;2334:1;2331;2324:12;2286:52;2357:29;2376:9;2357:29;:::i;:::-;2347:39;;2405:38;2439:2;2428:9;2424:18;2405:38;:::i;:::-;2395:48;;2189:260;;;;;:::o;2454:380::-;2533:1;2529:12;;;;2576;;;2597:61;;2651:4;2643:6;2639:17;2629:27;;2597:61;2704:2;2696:6;2693:14;2673:18;2670:38;2667:161;;2750:10;2745:3;2741:20;2738:1;2731:31;2785:4;2782:1;2775:15;2813:4;2810:1;2803:15;2667:161;;2454:380;;;:::o;2839:127::-;2900:10;2895:3;2891:20;2888:1;2881:31;2931:4;2928:1;2921:15;2955:4;2952:1;2945:15;2971:128;3011:3;3042:1;3038:6;3035:1;3032:13;3029:39;;;3048:18;;:::i;:::-;-1:-1:-1;3084:9:6;;2971:128::o;4267:127::-;4328:10;4323:3;4319:20;4316:1;4309:31;4359:4;4356:1;4349:15;4383:4;4380:1;4373:15;4399:135;4438:3;4459:17;;;4456:43;;4479:18;;:::i;:::-;-1:-1:-1;4526:1:6;4515:13;;4399:135::o;7302:274::-;7431:3;7469:6;7463:13;7485:53;7531:6;7526:3;7519:4;7511:6;7507:17;7485:53;:::i;:::-;7554:16;;;;;7302:274;-1:-1:-1;;7302:274:6:o;7581:277::-;7648:6;7701:2;7689:9;7680:7;7676:23;7672:32;7669:52;;;7717:1;7714;7707:12;7669:52;7749:9;7743:16;7802:5;7795:13;7788:21;7781:5;7778:32;7768:60;;7824:1;7821;7814:12",
    "sourcePath": "c:/Users/yanni/Documents/Formation Alyra/DefiStaking/contracts/Staking.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.14+commit.80d49f37"
    },
    "ast": {
        "absolutePath": "c:/Users/yanni/Documents/Formation Alyra/DefiStaking/contracts/Staking.sol",
        "exportedSymbols": {
            "Context": [
                883
            ],
            "ERC20": [
                758
            ],
            "IERC20": [
                836
            ],
            "IERC20Metadata": [
                861
            ],
            "Staking": [
                172
            ],
            "TransferHelper": [
                1054
            ]
        },
        "id": 173,
        "license": "GPL-2.0-or-later",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "46:24:0"
            },
            {
                "absolutePath": "c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 173,
                "sourceUnit": 759,
                "src": "76:121:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
                "file": "c:/Users/yanni/Documents/Formation Alyra/DefiStaking/node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 173,
                "sourceUnit": 1055,
                "src": "199:136:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 758,
                            "src": "361:5:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "361:5:0"
                    }
                ],
                "canonicalName": "Staking",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 172,
                "linearizedBaseContracts": [
                    172,
                    758,
                    861,
                    836,
                    883
                ],
                "name": "Staking",
                "nameLocation": "350:7:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "canonicalName": "Staking.Deposit",
                        "id": 10,
                        "members": [
                            {
                                "constant": false,
                                "id": 7,
                                "mutability": "mutable",
                                "name": "token",
                                "nameLocation": "410:5:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 10,
                                "src": "402:13:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 6,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "402:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 9,
                                "mutability": "mutable",
                                "name": "liquidity",
                                "nameLocation": "434:9:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 10,
                                "src": "426:17:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 8,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "426:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "Deposit",
                        "nameLocation": "383:7:0",
                        "nodeType": "StructDefinition",
                        "scope": 172,
                        "src": "376:75:0",
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "DepositList",
                        "nameLocation": "545:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "514:42:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Staking.Deposit[])"
                        },
                        "typeName": {
                            "id": 15,
                            "keyType": {
                                "id": 11,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "523:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "514:30:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Staking.Deposit[])"
                            },
                            "valueType": {
                                "baseType": {
                                    "id": 13,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                        "id": 12,
                                        "name": "Deposit",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 10,
                                        "src": "534:7:0"
                                    },
                                    "referencedDeclaration": 10,
                                    "src": "534:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Deposit_$10_storage_ptr",
                                        "typeString": "struct Staking.Deposit"
                                    }
                                },
                                "id": 14,
                                "nodeType": "ArrayTypeName",
                                "src": "534:9:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_ptr",
                                    "typeString": "struct Staking.Deposit[]"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "bf6eac2f4b953b5538a7beedc8a7fa29bc34b3b2029a1c4d794d946c2c501438",
                        "id": 24,
                        "name": "stake",
                        "nameLocation": "584:5:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 23,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 18,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "staker",
                                    "nameLocation": "598:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 24,
                                    "src": "590:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 17,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "590:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 20,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "token",
                                    "nameLocation": "614:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 24,
                                    "src": "606:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 19,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "606:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 22,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "629:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 24,
                                    "src": "621:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 21,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "621:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "589:47:0"
                        },
                        "src": "578:59:0"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "60829f8a539ccb23a3911e6210350b9abc6e703826eecda713cf7b97d080abaa",
                        "id": 32,
                        "name": "unstake",
                        "nameLocation": "649:7:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 26,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "staker",
                                    "nameLocation": "665:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 32,
                                    "src": "657:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 25,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "657:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 28,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "token",
                                    "nameLocation": "681:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 32,
                                    "src": "673:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 27,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "673:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 30,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "696:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 32,
                                    "src": "688:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 29,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "688:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "656:47:0"
                        },
                        "src": "643:61:0"
                    },
                    {
                        "body": {
                            "id": 49,
                            "nodeType": "Block",
                            "src": "780:87:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 44,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "838:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Staking_$172",
                                                            "typeString": "contract Staking"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Staking_$172",
                                                            "typeString": "contract Staking"
                                                        }
                                                    ],
                                                    "id": 43,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "830:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 42,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "830:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 45,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "830:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 46,
                                                "name": "initialSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 34,
                                                "src": "845:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 41,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 575,
                                            "src": "824:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 47,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "824:35:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 48,
                                    "nodeType": "ExpressionStatement",
                                    "src": "824:35:0"
                                }
                            ]
                        },
                        "id": 50,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "426c7565546f6b656e",
                                        "id": 37,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "761:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_bb29e3979c4388b6816984f95c9c36656fcf1bb1c8be5b5979f5da49c012c68f",
                                            "typeString": "literal_string \"BlueToken\""
                                        },
                                        "value": "BlueToken"
                                    },
                                    {
                                        "hexValue": "424c54",
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "774:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_37a596a886abb8c68da59b86c9360908396db8df4e7d0c2569f415ed1f78c801",
                                            "typeString": "literal_string \"BLT\""
                                        },
                                        "value": "BLT"
                                    }
                                ],
                                "id": 39,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 36,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 758,
                                    "src": "755:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "755:25:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 34,
                                    "mutability": "mutable",
                                    "name": "initialSupply",
                                    "nameLocation": "740:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 50,
                                    "src": "732:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 33,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "732:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "731:23:0"
                        },
                        "returnParameters": {
                            "id": 40,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "780:0:0"
                        },
                        "scope": 172,
                        "src": "720:147:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 144,
                            "nodeType": "Block",
                            "src": "936:717:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 58,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "955:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 59,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "955:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 62,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "977:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 61,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "969:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 60,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "969:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 63,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "969:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "955:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
                                                "id": 65,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "981:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                                                    "typeString": "literal_string \"Zero address not allowed\""
                                                },
                                                "value": "Zero address not allowed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                                                    "typeString": "literal_string \"Zero address not allowed\""
                                                }
                                            ],
                                            "id": 57,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "947:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "947:61:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "ExpressionStatement",
                                    "src": "947:61:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 71,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 69,
                                                    "name": "_amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 54,
                                                    "src": "1027:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "hexValue": "302e31",
                                                    "id": 70,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1038:9:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                        "typeString": "int_const 100000000000000000"
                                                    },
                                                    "value": "0.1"
                                                },
                                                "src": "1027:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "796f752063616e2774207374616b65206c657373207468616e20302e31206574686572",
                                                "id": 72,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1049:37:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_ca70a39f9bc45ea51e757800b9d73c827988d0c14efde4519ff70357988f0b06",
                                                    "typeString": "literal_string \"you can't stake less than 0.1 ether\""
                                                },
                                                "value": "you can't stake less than 0.1 ether"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_ca70a39f9bc45ea51e757800b9d73c827988d0c14efde4519ff70357988f0b06",
                                                    "typeString": "literal_string \"you can't stake less than 0.1 ether\""
                                                }
                                            ],
                                            "id": 68,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1019:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 73,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1019:68:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 74,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1019:68:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 78,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 52,
                                                "src": "1178:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 79,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1186:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1186:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 83,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1206:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Staking_$172",
                                                            "typeString": "contract Staking"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Staking_$172",
                                                            "typeString": "contract Staking"
                                                        }
                                                    ],
                                                    "id": 82,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1198:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 81,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1198:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1198:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 85,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 54,
                                                "src": "1213:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 75,
                                                "name": "TransferHelper",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1054,
                                                "src": "1146:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_TransferHelper_$1054_$",
                                                    "typeString": "type(library TransferHelper)"
                                                }
                                            },
                                            "id": 77,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "safeTransferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 935,
                                            "src": "1146:31:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,address,uint256)"
                                            }
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1146:75:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 87,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1146:75:0"
                                },
                                {
                                    "body": {
                                        "id": 135,
                                        "nodeType": "Block",
                                        "src": "1295:285:0",
                                        "statements": [
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 110,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "baseExpression": {
                                                                "baseExpression": {
                                                                    "id": 102,
                                                                    "name": "DepositList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 16,
                                                                    "src": "1314:11:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_$",
                                                                        "typeString": "mapping(address => struct Staking.Deposit storage ref[] storage ref)"
                                                                    }
                                                                },
                                                                "id": 105,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 103,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967281,
                                                                        "src": "1326:3:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 104,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "1326:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "1314:23:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$10_storage_$dyn_storage",
                                                                    "typeString": "struct Staking.Deposit storage ref[] storage ref"
                                                                }
                                                            },
                                                            "id": 107,
                                                            "indexExpression": {
                                                                "id": 106,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 89,
                                                                "src": "1338:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "1314:26:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Deposit_$10_storage",
                                                                "typeString": "struct Staking.Deposit storage ref"
                                                            }
                                                        },
                                                        "id": 108,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "token",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 7,
                                                        "src": "1314:32:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "id": 109,
                                                        "name": "_token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 52,
                                                        "src": "1350:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "1314:42:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "id": 133,
                                                    "nodeType": "Block",
                                                    "src": "1458:111:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 128,
                                                                                "name": "_token",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 52,
                                                                                "src": "1523:6:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            },
                                                                            {
                                                                                "id": 129,
                                                                                "name": "_amount",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 54,
                                                                                "src": "1543:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                },
                                                                                {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            ],
                                                                            "id": 127,
                                                                            "name": "Deposit",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 10,
                                                                            "src": "1506:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_struct$_Deposit_$10_storage_ptr_$",
                                                                                "typeString": "type(struct Staking.Deposit storage pointer)"
                                                                            }
                                                                        },
                                                                        "id": 130,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "structConstructorCall",
                                                                        "lValueRequested": false,
                                                                        "names": [
                                                                            "token",
                                                                            "liquidity"
                                                                        ],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "1506:46:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Deposit_$10_memory_ptr",
                                                                            "typeString": "struct Staking.Deposit memory"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_struct$_Deposit_$10_memory_ptr",
                                                                            "typeString": "struct Staking.Deposit memory"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "baseExpression": {
                                                                            "id": 122,
                                                                            "name": "DepositList",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 16,
                                                                            "src": "1477:11:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_$",
                                                                                "typeString": "mapping(address => struct Staking.Deposit storage ref[] storage ref)"
                                                                            }
                                                                        },
                                                                        "id": 125,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 123,
                                                                                "name": "msg",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 4294967281,
                                                                                "src": "1489:3:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_magic_message",
                                                                                    "typeString": "msg"
                                                                                }
                                                                            },
                                                                            "id": 124,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "sender",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "1489:10:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "1477:23:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_struct$_Deposit_$10_storage_$dyn_storage",
                                                                            "typeString": "struct Staking.Deposit storage ref[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 126,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "push",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "1477:28:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$10_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_ptr_$",
                                                                        "typeString": "function (struct Staking.Deposit storage ref[] storage pointer,struct Staking.Deposit storage ref)"
                                                                    }
                                                                },
                                                                "id": 131,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1477:76:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 132,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "1477:76:0"
                                                        }
                                                    ]
                                                },
                                                "id": 134,
                                                "nodeType": "IfStatement",
                                                "src": "1310:259:0",
                                                "trueBody": {
                                                    "id": 121,
                                                    "nodeType": "Block",
                                                    "src": "1357:82:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 119,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "expression": {
                                                                        "baseExpression": {
                                                                            "baseExpression": {
                                                                                "id": 111,
                                                                                "name": "DepositList",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 16,
                                                                                "src": "1376:11:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_$",
                                                                                    "typeString": "mapping(address => struct Staking.Deposit storage ref[] storage ref)"
                                                                                }
                                                                            },
                                                                            "id": 115,
                                                                            "indexExpression": {
                                                                                "expression": {
                                                                                    "id": 112,
                                                                                    "name": "msg",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 4294967281,
                                                                                    "src": "1388:3:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_magic_message",
                                                                                        "typeString": "msg"
                                                                                    }
                                                                                },
                                                                                "id": 113,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "sender",
                                                                                "nodeType": "MemberAccess",
                                                                                "src": "1388:10:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            },
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "IndexAccess",
                                                                            "src": "1376:23:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_array$_t_struct$_Deposit_$10_storage_$dyn_storage",
                                                                                "typeString": "struct Staking.Deposit storage ref[] storage ref"
                                                                            }
                                                                        },
                                                                        "id": 116,
                                                                        "indexExpression": {
                                                                            "id": 114,
                                                                            "name": "i",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 89,
                                                                            "src": "1400:1:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "1376:26:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Deposit_$10_storage",
                                                                            "typeString": "struct Staking.Deposit storage ref"
                                                                        }
                                                                    },
                                                                    "id": 117,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": true,
                                                                    "memberName": "liquidity",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 9,
                                                                    "src": "1376:36:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "+=",
                                                                "rightHandSide": {
                                                                    "id": 118,
                                                                    "name": "_amount",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 54,
                                                                    "src": "1416:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "1376:47:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 120,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "1376:47:0"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 98,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 92,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 89,
                                            "src": "1254:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 93,
                                                    "name": "DepositList",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 16,
                                                    "src": "1258:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Deposit_$10_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct Staking.Deposit storage ref[] storage ref)"
                                                    }
                                                },
                                                "id": 96,
                                                "indexExpression": {
                                                    "expression": {
                                                        "id": 94,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1270:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 95,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1270:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1258:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$10_storage_$dyn_storage",
                                                    "typeString": "struct Staking.Deposit storage ref[] storage ref"
                                                }
                                            },
                                            "id": 97,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "1258:30:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1254:34:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 136,
                                    "initializationExpression": {
                                        "assignments": [
                                            89
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 89,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "1247:1:0",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 136,
                                                "src": "1239:9:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 88,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1239:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 91,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 90,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1251:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "1239:13:0"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "1290:3:0",
                                            "subExpression": {
                                                "id": 99,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 89,
                                                "src": "1290:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 101,
                                        "nodeType": "ExpressionStatement",
                                        "src": "1290:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "1234:346:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 138,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1603:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 139,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1603:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 140,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 52,
                                                "src": "1615:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 141,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 54,
                                                "src": "1623:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 137,
                                            "name": "stake",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24,
                                            "src": "1597:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 142,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1597:34:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 143,
                                    "nodeType": "EmitStatement",
                                    "src": "1592:39:0"
                                }
                            ]
                        },
                        "functionSelector": "ebedb8b3",
                        "id": 145,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "Stake",
                        "nameLocation": "888:5:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 55,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 52,
                                    "mutability": "mutable",
                                    "name": "_token",
                                    "nameLocation": "902:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "894:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 51,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "894:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 54,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "918:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "910:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 53,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "910:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "893:33:0"
                        },
                        "returnParameters": {
                            "id": 56,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "936:0:0"
                        },
                        "scope": 172,
                        "src": "879:774:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 152,
                            "nodeType": "Block",
                            "src": "1721:10:0",
                            "statements": []
                        },
                        "functionSelector": "85082129",
                        "id": 153,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "Unstake",
                        "nameLocation": "1670:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 150,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 147,
                                    "mutability": "mutable",
                                    "name": "_token",
                                    "nameLocation": "1686:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 153,
                                    "src": "1678:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 146,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1678:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 149,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "1702:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 153,
                                    "src": "1694:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 148,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1694:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1677:34:0"
                        },
                        "returnParameters": {
                            "id": 151,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1721:0:0"
                        },
                        "scope": 172,
                        "src": "1661:70:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 158,
                            "nodeType": "Block",
                            "src": "1788:10:0",
                            "statements": []
                        },
                        "functionSelector": "6d6b2f77",
                        "id": 159,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "CollectRewards",
                        "nameLocation": "1748:14:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 156,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 155,
                                    "mutability": "mutable",
                                    "name": "_token",
                                    "nameLocation": "1771:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 159,
                                    "src": "1763:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 154,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1763:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1762:16:0"
                        },
                        "returnParameters": {
                            "id": 157,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1788:0:0"
                        },
                        "scope": 172,
                        "src": "1739:59:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 162,
                            "nodeType": "Block",
                            "src": "1844:10:0",
                            "statements": []
                        },
                        "functionSelector": "a8fca1ac",
                        "id": 163,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "CollectAllRewards",
                        "nameLocation": "1815:17:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 160,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1832:2:0"
                        },
                        "returnParameters": {
                            "id": 161,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1844:0:0"
                        },
                        "scope": 172,
                        "src": "1806:48:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 166,
                            "nodeType": "Block",
                            "src": "1898:10:0",
                            "statements": []
                        },
                        "functionSelector": "4c0aac9a",
                        "id": 167,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "WithdrawFunds",
                        "nameLocation": "1873:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 164,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1886:2:0"
                        },
                        "returnParameters": {
                            "id": 165,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1898:0:0"
                        },
                        "scope": 172,
                        "src": "1864:44:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 170,
                            "nodeType": "Block",
                            "src": "1943:10:0",
                            "statements": []
                        },
                        "id": 171,
                        "implemented": true,
                        "kind": "receive",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 168,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1923:2:0"
                        },
                        "returnParameters": {
                            "id": 169,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1943:0:0"
                        },
                        "scope": 172,
                        "src": "1916:37:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 173,
                "src": "341:1629:0",
                "usedErrors": []
            }
        ],
        "src": "46:1924:0"
    },
    "functionHashes": {
        "CollectAllRewards()": "a8fca1ac",
        "CollectRewards(address)": "6d6b2f77",
        "Stake(address,uint256)": "ebedb8b3",
        "Unstake(address,uint256)": "85082129",
        "WithdrawFunds()": "4c0aac9a",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "695400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "CollectAllRewards()": "145",
            "CollectRewards(address)": "381",
            "Stake(address,uint256)": "infinite",
            "Unstake(address,uint256)": "360",
            "WithdrawFunds()": "190",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24647",
            "balanceOf(address)": "2563",
            "decimals()": "200",
            "decreaseAllowance(address,uint256)": "27039",
            "increaseAllowance(address,uint256)": "27023",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "51226",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}